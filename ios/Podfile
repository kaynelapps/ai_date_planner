warn_for_unused_master_specs_repo = false
platform :ios, '14.0'

install! 'cocoapods',
         :deterministic_uuids => false,
         :generate_multiple_pod_projects => true,
         :disable_input_output_paths => true,
         :preserve_pod_file_structure => true,
         :share_schemes_for_development_pods => true

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  pod 'Firebase/Core'
  pod 'Firebase/Auth'
  pod 'Firebase/Firestore'
  pod 'Firebase/Storage'
  pod 'Firebase/Crashlytics'
  pod 'Firebase/AppCheck'

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] = [
        "$(inherited)",
        "${PODS_ROOT}/../.symlinks/flutter/ios",
        "${PODS_ROOT}/../../flutter_module/.ios/Flutter",
        "${PODS_XCFRAMEWORKS_BUILD_DIR}/Flutter"
      ]
      
      config.build_settings['OTHER_LDFLAGS'] = '$(inherited) -framework Flutter'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
end
